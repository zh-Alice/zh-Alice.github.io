<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>pythonhttprunner测试框架</title>
      <link href="/zh-Alice/zh-Alice.github.io/2023/06/28/pythonhttprunner-ce-shi-kuang-jia/"/>
      <url>/zh-Alice/zh-Alice.github.io/2023/06/28/pythonhttprunner-ce-shi-kuang-jia/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>pythonui自动化</title>
      <link href="/zh-Alice/zh-Alice.github.io/2023/06/19/pythonui-zi-dong-hua/"/>
      <url>/zh-Alice/zh-Alice.github.io/2023/06/19/pythonui-zi-dong-hua/</url>
      
        <content type="html"><![CDATA[<h2 id="一、介绍及用处"><a href="#一、介绍及用处" class="headerlink" title="一、介绍及用处"></a>一、介绍及用处</h2><blockquote><p>Selenium是一个开源的Web UI自动化测试工具，可以用于测试浏览器和移动设备，它支持多种编程语言，和页面爬虫差不多，页面爬虫主要是获取页面元素，自动化主要是对页面元素模拟点击输入等操作，所以说学会ui自动化后学爬虫就非常简单了。<br>优点：ui自动化方便项目的回归测试，也可以对经常重复性的操作进行自动化，省去枯燥无谓的操作。<br>缺点：就是维护成本高，UI自动化搞不好会适得其反，浪费了大量的时间和资源去排查环境的问题。</p></blockquote><h2 id="二、环境安装"><a href="#二、环境安装" class="headerlink" title="二、环境安装"></a>二、环境安装</h2><ol><li>首先下载<a href="https://www.python.org/">python</a>，进行安装。</li><li>选择自己的编译器，这里使用<a href="https://www.jetbrains.com.cn/en-us/pycharm/">pycharm</a>，选择点击下载，选择左边免费版下载就行，然后进行安装。</li><li>win + R键输入cmd，在命令窗口输入python，出现版本号，配置成功。<br><img src="/zh-Alice/zh-Alice.github.io/zh-Alice/zh-Alice.github.io/2023/06/19/pythonui-zi-dong-hua/2.png" alt="cmd"></li><li>（这一步可操作可不操作）改成中文，打开pycharm，选择Plugins，在输入框里输入Chinese，点击下载即可<br><img src="/zh-Alice/zh-Alice.github.io/zh-Alice/zh-Alice.github.io/2023/06/19/pythonui-zi-dong-hua/3.png" alt="中文"></li><li>点击New Project，点击ok</li><li>找到 file（文件）——settings（设置）——Project（项目）——Python interpreter（Python解释器）——Add interpreter（添加解释器）——System interpret（系统解释器）路径找到自己安装的Python.exe目录，默认目录（C:\Users\用户名称\AppData\Local\Programs\Python\Python版本号），选择python.exe，点击OK，点击Apply（应用）即可。</li><li>下载<a href="http://chromedriver.storage.googleapis.com/index.html">webdriver</a>，和自己Chrome（谷歌）浏览器版本对应的驱动，如果没有那就下载包含版本数字最多的，其他浏览器也是一样的操作。</li><li>下载后配置环境变量，添加到系统环境变量path中，值为你存放的目录，接下来cmd输入：webdriver，回车，跳出浏览器即可。（还有一种简单方法，直接把webdriver放入python.exe的目录，此方法不用在cmd中验证）</li><li>在pycharm中找到 file（文件）——settings（设置）——Project（项目）——Python interpreter（Python解释器）——“+”号，点击后输入selenium，点击install（下载）即可。</li><li>删除新建项目main中的内容输入<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># 导入webdriver</span><span class="token keyword">from</span> selenium <span class="token keyword">import</span> webdriver<span class="token comment"># 导入时间</span><span class="token keyword">import</span> time<span class="token comment"># 实例化</span>driver <span class="token operator">=</span> webdriver<span class="token punctuation">.</span>Chrome<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment"># 打开百度网页</span>driver<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">"https://www.baidu.com/"</span><span class="token punctuation">)</span><span class="token comment"># 等待三秒</span>time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token comment"># 关闭浏览器</span>driver<span class="token punctuation">.</span>quit<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li>鼠标右键，选择run.main，即可自动打开浏览器，进入<a href="https://www.baidu.com/">百度</a>页面，然后关闭。</li></ol><h2 id="三、定位元素及操作"><a href="#三、定位元素及操作" class="headerlink" title="三、定位元素及操作"></a>三、定位元素及操作</h2><h3 id="3-1定位元素"><a href="#3-1定位元素" class="headerlink" title="3.1定位元素"></a>3.1定位元素</h3><p>我们主要用到id，name，xpath，link_text进行定位。webdrive有八个定位元素操作：</p><table><thead><tr><th>名称</th><th>方式</th><th>解释</th></tr></thead><tbody><tr><td>id</td><td>find_element_by_id(x)</td><td>id必须唯一，通过id进行定位</td></tr><tr><td>name</td><td>find_element_by_name(x)</td><td>如果没有id，可以通过name进行定位，name必须唯一</td></tr><tr><td>xpath</td><td>find_element_by_xpath(x)</td><td>层级进行定位</td></tr><tr><td>link_tex</td><td>find_element_by_link_text(x)</td><td>文本进行定位</td></tr><tr><td>partial_link_text</td><td>find_element_by_partial_link_text(x)</td><td>模糊定位</td></tr><tr><td>tag_name</td><td>find_element_by_tag_name(x)</td><td>标签名字定位</td></tr><tr><td>class_name</td><td>find_element_by_class_name(x)</td><td>类名定位</td></tr><tr><td>css_selector</td><td>find_element_by_css_selector(x)</td><td>css定位</td></tr></tbody></table><p>怎么通过对应的方法找元素，<a href="https://www.baidu.com/">百度</a>即可，要写太多了，我懒。</p><h3 id="3-2鼠标键盘操作"><a href="#3-2鼠标键盘操作" class="headerlink" title="3.2鼠标键盘操作"></a>3.2鼠标键盘操作</h3><p>如果以下操作输入后没有提示的则需要前面导入键盘鼠标操作ActionChains（from selenium.webdriver.common.action_chains import ActionChains）</p><ol><li>点击元素:driver.find_element_by_id(“someid”).click()<br>这个方法可以点击传入的元素。</li><li>在元素上双击:driver.find_element_by_id(“someid”).double_click()<br>这个方法可以在传入的元素上双击。</li><li>右键点击元素:driver.find_element_by_id(“someid”).context_click()<br>这个方法可以在元素上右键点击。</li><li>模拟按键:driver.find_element_by_id(“someid”).send_keys(“some text”)<br>这个方法可以模拟按键输入文本,可以传入字符串、键盘按键代码、上传文件等。</li><li>清除输入框内容:driver.find_element_by_id(“someid”).clear()<br>这个方法可以清除输入框中已有的内容。</li><li>模拟按下某个键:driver.find_element_by_id(“someid”).send_keys(Keys.SPACE)<br>Keys是一个包含各种键盘按键的常量类,模拟按下某个键。</li><li>鼠标悬停:driver.find_element_by_id(“someid”).move_to_element()<br>这个方法可以模拟鼠标悬停到某个元素上。</li><li>拖动元素:driver.find_element_by_id(“someid”).drag_and_drop_by_offset(x, y)<br>这个方法可以拖动某个元素到指定的x和y偏移位置。</li><li>鼠标滚轮:driver.execute_script(“window.scrollTo(0, 1000);”)<br>这个方法可以来模拟鼠标滚轮操作,滚动到指定位置。</li></ol><h3 id="3-3浏览器操作"><a href="#3-3浏览器操作" class="headerlink" title="3.3浏览器操作"></a>3.3浏览器操作</h3><p>以下是基本操作，其它操作可以进行<a href="https://www.baidu.com/">百度</a></p><ol><li>弹出框处理<br>可以使用switch_to.alert来处理弹出框,并使用text、accept()、dismiss()等方法操作弹出框。</li><li>窗口切换<br>可以使用switch_to.window来切换窗口,以进行跨窗口测试。</li><li>截图<br>可以使用get_screenshot_as_png()来截取当前网页屏幕截图。</li><li>前进/后退<br>可以使用forward()和back()方法在网页间前进和后退。</li><li>窗口最大化<br>可以使用maximize_window()方法。</li><li>关闭浏览器<br>通过quit.()方法关闭浏览器</li></ol><h2 id="四、代码示例"><a href="#四、代码示例" class="headerlink" title="四、代码示例"></a>四、代码示例</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># 导入selenium</span><span class="token keyword">from</span> selenium <span class="token keyword">import</span> webdriver<span class="token comment"># Selenium中的一个工具类,它包含了许多查找元素的方法。</span><span class="token keyword">from</span> selenium<span class="token punctuation">.</span>webdriver<span class="token punctuation">.</span>common<span class="token punctuation">.</span>by <span class="token keyword">import</span> By<span class="token comment"># 实例化</span>driver<span class="token operator">=</span>webdriver<span class="token punctuation">.</span>Chrome<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment"># 打开百度</span>driver<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'http://www.baidu.com'</span><span class="token punctuation">)</span><span class="token comment"># 窗口最大化</span>driver<span class="token punctuation">.</span>maximize_window<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment"># 输入selenium</span>driver<span class="token punctuation">.</span>find_element<span class="token punctuation">(</span>By<span class="token punctuation">.</span>ID<span class="token punctuation">,</span><span class="token string">'kw'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>send_keys<span class="token punctuation">(</span><span class="token string">'selenium'</span><span class="token punctuation">)</span><span class="token comment"># 点击搜索</span>driver<span class="token punctuation">.</span>find_element<span class="token punctuation">(</span>By<span class="token punctuation">.</span>ID<span class="token punctuation">,</span><span class="token string">'su'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment"># 关闭浏览器</span>driver<span class="token punctuation">.</span>quit<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="五、定位不到元素踩坑"><a href="#五、定位不到元素踩坑" class="headerlink" title="五、定位不到元素踩坑"></a>五、定位不到元素踩坑</h2><ol><li>首先确定元素的正确性，没问题，换种定位方法</li><li>页面加载慢，元素没有加载出来，需要在前面加上强制等待time.sleep(秒数)</li><li>看看是否有ifrome嵌套页面需要进入嵌套页面：<br>driver.switch_to.frame(0) 通过索引进入（可能有多个嵌套网页）</li><li>是否为select查询，通过select查询方法：select_by_index()</li><li>是否为alert弹窗</li><li>是否为动态元素，在父元素定位后再找子元素。</li><li>定位下一级时，上一级是否定位到<br>常规踩坑大概就是这些。</li></ol><h2 id="写在最后"><a href="#写在最后" class="headerlink" title="写在最后"></a>写在最后</h2><p>个人自动化脚本不用太在意这些话，主要对项目的自动化测试脚本<br>写法都大差不差，无非就是方法的封装和框架，框架主要是：公用方法，元素存放，配置，测试用例，结果验证，报告存放，文件存放，启动器。接手别人的自动化脚本时先定位框架里面的这几个的位置能够快速的理解别人的自动化脚本。</p>]]></content>
      
      
      <categories>
          
          <category> ui自动化 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> 自动化 </tag>
            
            <tag> selenium </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>社会工程学</title>
      <link href="/zh-Alice/zh-Alice.github.io/2023/06/16/she-hui-gong-cheng-xue/"/>
      <url>/zh-Alice/zh-Alice.github.io/2023/06/16/she-hui-gong-cheng-xue/</url>
      
        <content type="html"><![CDATA[<h2 id="一、起源"><a href="#一、起源" class="headerlink" title="一、起源"></a>一、起源</h2><p>凯文·米特尼克在《反欺骗的艺术》中曾提到，人为因素才是安全的软肋。很多企业、公司在信息安全上投入大量的资金，最终导致数据泄露的原因，往往却是发生在人本身。你们可能永远都想象不到，对于黑客们来说，通过一个用户名、一串数字、一串英文代码，社会工程师就可以通过这么几条的线索，通过社工攻击手段，加以筛选、整理，就能把你的所有个人情况信息、家庭状况、兴趣爱好、婚姻状况、你在网上留下的一切痕迹等个人信息全部掌握得一清二楚。虽然这个可能是最不起眼，而且还是最麻烦的方法。一种无需依托任何黑客软件，更注重研究人性弱点的黑客手法正在兴起，这就是社会工程学黑客技术。</p><h2 id="二、社会工程学的定义"><a href="#二、社会工程学的定义" class="headerlink" title="二、社会工程学的定义"></a>二、社会工程学的定义</h2><p>社会工程学是一种利用人类的社交和心理特征来获取敏感信息或进行其他恶意行为的技术。攻击者通过操纵人们的情感、信任、好奇心等因素，欺骗他们揭示个人机密信息，例如密码、账户信息和身份证号码。社会工程学攻击通常不直接攻击技术系统，而是利用人们的弱点来入侵系统或获取信息。</p><h2 id="三、社会工程学的攻击方式"><a href="#三、社会工程学的攻击方式" class="headerlink" title="三、社会工程学的攻击方式"></a>三、社会工程学的攻击方式</h2><ol><li>钓鱼攻击：攻击者伪装成合法机构或个人，通过发送虚假的电子邮件、信息或打电话，诱使受害者揭示敏感信息。他们常常冒充银行、社交媒体平台或其他在线服务提供商，引诱受害者点击恶意链接或提供个人信息。</li><li>冒充身份：攻击者通过伪造身份或假装是合法人员，赢得受害者的信任，并获取敏感信息或进行未经授权的行为。他们可能以技术支持人员、公司员工或其他权威人士的身份出现，让受害者主动提供信息或执行恶意操作。</li><li>社交工程：攻击者通过深入了解受害者的个人信息和社交网络，在面对面的交流中利用社交技巧和心理操作手段获取信息。他们可能伪装成朋友、同事或熟人，以亲密关系的名义获取受害者的信任，并获取敏感信息。</li></ol><h2 id="四、社会工程学的防御措施"><a href="#四、社会工程学的防御措施" class="headerlink" title="四、社会工程学的防御措施"></a>四、社会工程学的防御措施</h2><ol><li>提高安全意识：通过教育和培训，提高人们对社会工程学攻击的认识，学会辨别可疑请求和行为。组织应定期开展安全意识培训，帮助员工了解攻击方式和保护措施，提高他们对潜在威胁的警觉性。</li><li>谨慎揭示信息：不轻易泄露个人身份信息和敏感数据，特别是在未经验证的情况下。当收到可疑请求时，应谨慎验证请求的真实性，并避免通过电子邮件、电话或社交媒体提供敏感信息。</li><li>强化身份验证：采用多因素身份验证机制，例如使用密码、生物识别技术或令牌等，以增加访问系统或数据的安全性。这样即使攻击者获得了部分信息，也无法轻易突破多层次的身份验证措施。</li></ol><h2 id="五、社会工程学的危害"><a href="#五、社会工程学的危害" class="headerlink" title="五、社会工程学的危害"></a>五、社会工程学的危害</h2><p>社会工程学攻击对个人和组织都带来严重的危害。对个人而言，攻击者可能获取其个人隐私、金融信息、登录凭证等，导致财务损失、身份盗窃或在线账户被入侵。对组织而言，社会工程学攻击可能导致敏感数据泄露、商业机密被窃取、财务损失、声誉受损等严重后果。</p><h2 id="六、总结"><a href="#六、总结" class="headerlink" title="六、总结"></a>六、总结</h2><p>社会工程学攻击揭示了人类心理的脆弱性，并提醒我们在数字时代保护个人隐私和信息安全的重要性。教育和培训是防范攻击的关键，提高人们对社会工程学攻击的认识。采取防御措施如提高安全意识、限制信息揭示、管理访问权限和使用多因素身份验证，可以有效防范社会工程学攻击的威胁。只有综合运用技术手段和人为因素的防御策略，我们才能更好地保护个人和组织的安全。</p><h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><p><font color="#660000">社会工程学是对个人信息及隐私的获取是违法犯罪行为</font><br><br><font color="#660000">社会工程学是对个人信息及隐私的获取是违法犯罪行为</font><br><br><font color="#660000">社会工程学是对个人信息及隐私的获取是违法犯罪行为</font><br></p><h3 id="简单理解"><a href="#简单理解" class="headerlink" title="简单理解"></a>简单理解</h3><ul><li>企业泄露的用户数据，比如如家酒店，京东快递，q绑，微博等等，被大佬扒下来的数据组成的库，叫做社工库，也是社会工程师的工具，用于信息收集</li><li>有一个词叫人肉，人肉只是社会工程学的一部分，用于信息收集</li><li>通常用于获取重大利益和目的进行</li><li>不像是电影里演的那种，一键获取软件程序什么的，社会工程学需要时间很长或者很短</li><li>通杀，通杀的意思是完全控制目标</li><li>并不是让你去怀疑每个人，最好的防御就是留个心眼，面对金钱，物质，权利等利益，警惕精神情绪方面的事情，谨慎透露、输入、发布个人信息</li><li>重要密码一定不要用生日，身份证，电话，姓名等个人信息，很早就有根据个人信息生成字典的工具</li><li>渗透也是社会工程学的一部分</li><li>警惕识别陌生的垃圾邮件，钓鱼信息，钓鱼网站等<br><img src="/zh-Alice/zh-Alice.github.io/zh-Alice/zh-Alice.github.io/2023/06/16/she-hui-gong-cheng-xue/2.jpg" alt="社会工程学"></li></ul><p>本文只是帮助小白认识社会工程学及它的危害，并不提供工具和教程！</p>]]></content>
      
      
      <categories>
          
          <category> 社会工程学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 社会工程学 </tag>
            
            <tag> 社工 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CodeWhispererAI编码</title>
      <link href="/zh-Alice/zh-Alice.github.io/2023/06/15/codewhispererai-bian-ma/"/>
      <url>/zh-Alice/zh-Alice.github.io/2023/06/15/codewhispererai-bian-ma/</url>
      
        <content type="html"><![CDATA[<h2 id="Amazon-CodeWhisperer介绍"><a href="#Amazon-CodeWhisperer介绍" class="headerlink" title="Amazon CodeWhisperer介绍"></a>Amazon CodeWhisperer介绍</h2><p>对个人开发者免费开放的AI编码，个人体验相对于收费AI编码差了一点，支持热门的编程语言和IDE，可以英文和中文（其它语言没试）给注释，回车进行编码，按电脑的TAB键即可自动编写。更多了解请点击：<a href="https://aws.amazon.com/cn/codewhisperer/features/">Amazon CodeWhisperer</a></p><h2 id="Amazon-CodeWhisperer安装使用（VScode为例子）"><a href="#Amazon-CodeWhisperer安装使用（VScode为例子）" class="headerlink" title="Amazon CodeWhisperer安装使用（VScode为例子）"></a>Amazon CodeWhisperer安装使用（VScode为例子）</h2><h3 id="安装CodeWhisperer"><a href="#安装CodeWhisperer" class="headerlink" title="安装CodeWhisperer"></a>安装CodeWhisperer</h3><ol><li>首先打开VScode</li><li>点击扩展</li><li>输入AWSToolkit</li><li>点击安装</li></ol><p><img src="/zh-Alice/zh-Alice.github.io/zh-Alice/zh-Alice.github.io/2023/06/15/codewhispererai-bian-ma/2.png" alt="安装CodeWhisperer"></p><h3 id="激活CodeWhisperer"><a href="#激活CodeWhisperer" class="headerlink" title="激活CodeWhisperer"></a>激活CodeWhisperer</h3><ol><li>点击扩展下面的AWS图标</li><li>选择CodeWhisperer</li><li>点击Start</li><li>顶部出现三个选项点击第一个</li><li>复制你Code</li><li>此时会自动跳转到你的浏览器，把你复制的Code粘贴上去</li><li>点击下一步，创建你的Builder ID</li><li>按要求输入邮箱，下一步，输入你的名字，点击下一步</li><li>邮箱验证码，输入验证码，然后输入密码，点击Create</li><li>过一会会出现Allow页面，点击一下Allow就可以了</li><li>回到VScode，CodeWhisperer下会出现已经链接的提示就可以使用了<br><img src="/zh-Alice/zh-Alice.github.io/zh-Alice/zh-Alice.github.io/2023/06/15/codewhispererai-bian-ma/3.png" alt="激活CodeWhisperer"><h3 id="使用CodeWhisperer"><a href="#使用CodeWhisperer" class="headerlink" title="使用CodeWhisperer"></a>使用CodeWhisperer</h3>以python语言为例，输入 ## 冒泡排序 按回车，在次按TAB键，会输出以下</li></ol><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">## 冒泡排序</span><span class="token keyword">def</span> <span class="token function">bubble_sort</span><span class="token punctuation">(</span>alist<span class="token punctuation">)</span><span class="token punctuation">:</span>    n <span class="token operator">=</span> <span class="token builtin">len</span><span class="token punctuation">(</span>alist<span class="token punctuation">)</span>    <span class="token keyword">for</span> j <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>n<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        count <span class="token operator">=</span> <span class="token number">0</span>        <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> n<span class="token operator">-</span><span class="token number">1</span><span class="token operator">-</span>j<span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">if</span> alist<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&gt;</span> alist<span class="token punctuation">[</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">:</span>                alist<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> alist<span class="token punctuation">[</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> alist<span class="token punctuation">[</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> alist<span class="token punctuation">[</span>i<span class="token punctuation">]</span>                count <span class="token operator">+=</span> <span class="token number">1</span>        <span class="token keyword">if</span> count <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>            <span class="token keyword">return</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>更多：<a href="https://docs.aws.amazon.com/zh_cn/codewhisperer/latest/userguide/what-is-cwspr.html">Amazon CodeWhisperer用户指南</a></p>]]></content>
      
      
      <categories>
          
          <category> AI编码 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CodeWhisperer </tag>
            
            <tag> AI </tag>
            
            <tag> 编码 </tag>
            
            <tag> IDE </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>自动化测试</title>
      <link href="/zh-Alice/zh-Alice.github.io/2023/06/14/zi-dong-hua-ce-shi/"/>
      <url>/zh-Alice/zh-Alice.github.io/2023/06/14/zi-dong-hua-ce-shi/</url>
      
        <content type="html"><![CDATA[<h1 id="安装python"><a href="#安装python" class="headerlink" title="安装python"></a>安装python</h1><p>可以百度python安装方法</p><h2 id="安装jdk"><a href="#安装jdk" class="headerlink" title="安装jdk"></a>安装jdk</h2><p>百度jdk安装</p><h3 id="配置jdk环境变量"><a href="#配置jdk环境变量" class="headerlink" title="配置jdk环境变量"></a>配置jdk环境变量</h3><p>百度配置java环境变量</p><h1 id="一级标题"><a href="#一级标题" class="headerlink" title="一级标题"></a>一级标题</h1><h2 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题"></a>二级标题</h2><h3 id="三级标题"><a href="#三级标题" class="headerlink" title="三级标题"></a>三级标题</h3><h4 id="四级标题"><a href="#四级标题" class="headerlink" title="四级标题"></a>四级标题</h4><h5 id="五级标题"><a href="#五级标题" class="headerlink" title="五级标题"></a>五级标题</h5><h6 id="六级标题"><a href="#六级标题" class="headerlink" title="六级标题"></a>六级标题</h6><p><em>pycharm斜体</em><br><strong>pycharm粗体</strong><br><del>删除线</del></p><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">hello world<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>数学公式<br>$$<br>1+1=3<br>$$<br>——————————————<br>++++++++++++++</p><hr><p><u>带下划线文本</u></p><ul><li>第一项无序</li><li>第二项</li><li>第三项</li></ul><ol><li>第一项有序</li><li>第二项</li><li>第三项<blockquote><p>最外层</p><blockquote><p>第一层嵌套</p><blockquote><p>第二层嵌套</p></blockquote></blockquote></blockquote></li></ol><p>这是一个链接 <a href="https://news.sina.com.cn/">新浪新闻</a></p><p><a href="https://news.sina.com.cn/">https://news.sina.com.cn/</a></p><p><a href="http://www.baidu.com/">biadu</a></p><p><img src="https://pic4.58cdn.com.cn/nowater/webim/big/n_v2e80a9bfb76574e60817bbf634c137420.png" alt="有问题上知乎"></p><table><thead><tr><th>表头1</th><th>表头2</th></tr></thead><tbody><tr><td>单元格11</td><td>单元格12</td></tr><tr><td>单元格21</td><td>单元格22</td></tr></tbody></table><table><thead><tr><th align="left">左对齐</th><th align="center">居中对齐</th><th align="right">右对齐</th></tr></thead><tbody><tr><td align="left">单元格11</td><td align="center">单元格12</td><td align="right">单元格13</td></tr><tr><td align="left">单元格21</td><td align="center">单元格22</td><td align="right">单元格23</td></tr></tbody></table><p>$$<br>\int_0^1 {x^2} ,{\rm d}x<br>$$</p><p>浅红色文字：<font color="#dd0000">浅红色文字：</font><br><br>深红色文字：<font color="#660000">深红色文字</font><br><br>浅绿色文字：<font color="#00dd00">浅绿色文字</font><br><br>深绿色文字：<font color="#006600">深绿色文字</font><br><br>浅蓝色文字：<font color="#0000dd">浅蓝色文字</font><br><br>深蓝色文字：<font color="#000066">深蓝色文字</font><br><br>浅黄色文字：<font color="#dddd00">浅黄色文字</font><br><br>深黄色文字：<font color="#666600">深黄色文字</font><br><br>浅青色文字：<font color="#00dddd">浅青色文字</font><br><br>深青色文字：<font color="#006666">深青色文字</font><br><br>浅紫色文字：<font color="#dd00dd">浅紫色文字</font><br><br>深紫色文字：<font color="#660066">深紫色文字</font><br> </p>]]></content>
      
      
      <categories>
          
          <category> 自动化 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> zidonghua </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
